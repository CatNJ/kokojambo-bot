from random import *
import config
from botdb import User
from aiogram import Bot, Dispatcher, executor, types
from art import *

bot = Bot(token=config.TOKEN)
dp = Dispatcher(bot)

tprint('Bot started!')


@dp.message_handler(commands=['start'])
async def start(message: types.Message):

	user = User(message.from_user.id)
	user.check_user(message.from_user.id)

	await message.reply('''
üôã‚Äç‚ôÇ –ü—Ä–∏–≤–µ—Ç! –Ø Tvoja mama bot.

üìú –ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É, –Ω–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É "–ü—Ä–æ—Ñ–∏–ª—å".

üìò –ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–µ—Ä–µ—á–µ–Ω—å –∫–æ–º–∞–Ω–¥ "–ö–æ–º–∞–Ω–¥—ã".
''')



# –ø—Ä–æ—Ñ–∏–ª—å - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
@dp.message_handler(regexp='–ü—Ä–æ—Ñ–∏–ª—å')
async def prof(message: types.Message):

	user = User(message.from_user.id)
	user.check_user(message.from_user.id)

	if message.text[:7] == '–ü—Ä–æ—Ñ–∏–ª—å':
		await message.reply(
			f"""
ü§ö –°–Ω–æ–≤–∞ –ø—Ä–∏–≤–µ—Ç, –î–µ—Ä–∂–∏ —Å–≤–æ—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É.

üí≥ –í–∞—à ID: {user.user_info()[0]}
üóí –°—Ç–∞—Ç—É—Å: {user.user_info()[1]}
üí∂ –ë–∞–ª–∞–Ω—Å: {user.user_info()[2]}
üìä –í–∞—à —É—Ä–æ–≤–µ–Ω—å: {user.lvl_top()}
üî© –†–∞–∑–º–µ—Ä —Ö—É—è: {user.user_info()[3]} —Å–º
üóí –ú–µ—Å—Ç–æ —Ä–∞–±–æ—Ç—ã: {user.user_info()[5]}
üßæ –ò–º—è: {user.user_info()[6]}
""")

# commands
@dp.message_handler(regexp='–ö–æ–º–∞–Ω–¥—ã')
async def commands_list(message: types.Message):
	user = User(message.from_user.id)
	user.check_user(message.from_user.id)

	if message.text[:7] == '–ö–æ–º–∞–Ω–¥—ã':

		await message.reply(
			'''
ü§ö Hello guys, –¥–µ—Ä–∂–∏—Ç–µ —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥.	

üìú –ü—Ä–æ—Ñ–∏–ª—å - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ—É –æ —Å–µ–±–µ.
üìò –ö–æ–º–∞–Ω–¥—ã - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–µ—Ä–µ—á–µ–Ω—å –∫–æ–º–∞–Ω–¥.
üé∞ –ö–∞–∑–∏–Ω–æ - –ö–∞–∑–∏–Ω–æ <—Å—É–º–∞>.
üóí –†–∞–±–æ—Ç—ã - –°–ø–∏—Å–æ–∫ —Ä–∞–±–æ—Ç.
üë©‚Äçüöí –†–∞–±–æ—Ç–∞—Ç—å - –í—ã —Å—Ö–æ–¥–∏—Ç–µ –Ω–∞ —Ä–∞–±–æ—Ç—É –∏ –ø–æ–ª—É—á–∏—Ç–µ –æ–ø–ª–∞—Ç—É.
üîé –ò–Ω—Ñ–∞ - –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤—Å—ë–º, "–ò–Ω—Ñ–∞ —Ö–µ–ª–ø" —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Å–ø–∏—Å–æ–∫.
üëõ –ë–∞–ª–∞–Ω—Å –∏–ª–∏ –ë - –£–∑–Ω–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ä–µ–¥—Å—Ç–≤.

			''')


#–†–ê–ë–û–¢–´

#—Ä–∞–±–æ—Ç–∞—Ç—å - –ø–æ–ª—É—á–∞—Ç—å –∑–∞—Ä–ø–ª–∞—Ç—É
@dp.message_handler(regexp='–†–∞–±–æ—Ç–∞—Ç—å')
async def job_work(message: types.Message):

	user = User(message.from_user.id)
	user.check_user(message.from_user.id)

	if message.text[:8] == '–†–∞–±–æ—Ç–∞—Ç—å':

		if user.user_info()[5] == '—Ñ–µ—Ä–º–∞':
			user.get_money(50000)
			first_lvl = user.lvl_top()
			await message.reply('üë®‚Äçüåæ –í—ã —É—Å–ø–µ—à–Ω–æ —Å–æ–±—Ä–∞–ª–∏ —Å–µ–Ω–æ –∏ –ø–æ–ª—É—á–∏–ª–∏ 50–∫ –≥—Ä–Ω!')
			user.give_lvl(7)
			second_lvl = user.lvl_top()
			if first_lvl < second_lvl:
				await message.reply(f'üéÜ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –≤–∞—à —É—Ä–æ–≤–µ–Ω—å –ø–æ–≤—ã—à–µ–Ω –¥–æ {second_lvl}')


		if user.user_info()[5] == '–¢–∞–∫—Å–∏':
			user.get_money(90000)
			first_lvl = user.lvl_top()
			await message.reply('üöï –í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–≤–µ–∑–ª–∏ –ø–∞—Å–∞–∂–∏—Ä–æ–≤ –∏ –ø–æ–ª—É—á–∏–ª–∏ 90–∫ –≥—Ä–Ω')
			user.give_lvl(14)
			second_lvl = user.lvl_top()
			if first_lvl < second_lvl:
				await message.reply(f'üéÜ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –≤–∞—à —É—Ä–æ–≤–µ–Ω—å –ø–æ–≤—ã—à–µ–Ω –¥–æ {second_lvl}')



		if user.user_info()[5] == '–ü–æ–ª–∏—Ü–∏—è':
			user.get_money(140000)
			first_lvl = user.lvl_top()
			await message.reply('üë®‚Äçüåæ –í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–π–º–∞–ª–∏ —Ä–æ–∑–±–∏–π–Ω—ã–∫–∞ –∏ –ø–æ–ª—É—á–∏–ª–∏ 140–∫ –≥—Ä–Ω!')
			user.give_lvl(20)
			second_lvl = user.lvl_top()
			if first_lvl < second_lvl:
				await message.reply(f'üéÜ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –≤–∞—à —É—Ä–æ–≤–µ–Ω—å –ø–æ–≤—ã—à–µ–Ω –¥–æ {second_lvl}')

		if user.user_info()[5] == '–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç':
			user.get_money(200000)
			first_lvl = user.lvl_top()
			await message.reply('üë®‚Äçüåæ –í—ã —É—Å–ø–µ—à–Ω–æ –≤–∑–ª–æ–º–∞–ª–∏ –ø–µ–Ω—Ç–∞–≥–æ–Ω –Ω–∞ html –∏ –ø–æ–ª—É—á–∏–ª–∏ 200–∫ –≥—Ä–Ω!')
			user.give_lvl(35)
			second_lvl = user.lvl_top()
			if first_lvl < second_lvl:
				await message.reply(f'üéÜ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –≤–∞—à —É—Ä–æ–≤–µ–Ω—å –ø–æ–≤—ã—à–µ–Ω –¥–æ {second_lvl}')

		if user.user_info()[5] == '–ë–æ–¥–∏–±–∏–ª–¥–µ—Ä':
			user.get_money(270000)
			first_lvl = user.lvl_top()
			await message.reply('üë®‚Äçüåæ –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è –∏ –ø–æ–ª—É—á–∏–ª–∏ 270–∫ –≥—Ä–Ω!')
			user.give_lvl(50)
			second_lvl = user.lvl_top()
			if first_lvl < second_lvl:
				await message.reply(f'üéÜ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –≤–∞—à —É—Ä–æ–≤–µ–Ω—å –ø–æ–≤—ã—à–µ–Ω –¥–æ {second_lvl}')

		if user.user_info()[5] == '–í—Ä–∞—á':
			user.get_money(350000)
			first_lvl = user.lvl_top()
			await message.reply('üë®‚Äçüåæ –í—ã –ø—Ä–æ–≤–µ–ª–∏ —É—Å–ø–µ—à–Ω—É—é –æ–ø–µ—Ä–∞—Ü–∏—é –∏ –ø–æ–ª—É—á–∏–ª–∏ 350–∫ –≥—Ä–Ω!')
			user.give_lvl(70)
			second_lvl = user.lvl_top()
			if first_lvl < second_lvl:
				await message.reply(f'üéÜ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –≤–∞—à —É—Ä–æ–≤–µ–Ω—å –ø–æ–≤—ã—à–µ–Ω –¥–æ {second_lvl}')

		else:
			await message.reply('üò¶ –£–ø—Å, –ø–æ—Ö–æ–∂–µ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫')

	else:
		await message.reply('üò¶ –£–ø—Å, –ø–æ—Ö–æ–∂–µ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫')


#–æ–ø–∏—Å–∞–Ω–∏–µ –∏ —Å–ø–∏—Å–æ–∫ —Ä–∞–±–æ—Ç
@dp.message_handler(regexp='–†–∞–±–æ—Ç—ã')
async def job(message: types.Message):

	user = User(message.from_user.id)
	user.check_user(message.from_user.id)

	if message.text[:6] == '–†–∞–±–æ—Ç—ã':
		await message.reply(
				'''
üßë‚Äçüíº –ò—â–µ—à—å —Ä–∞–±–æ—Ç—É? –¢—ã –ø–æ–ø–∞–ª –ø–æ –∞–¥—Ä–µ—Å—É!

üë®‚Äçüåæ –†–∞–±–æ—Ç–∞—Ç—å —Ñ–µ—Ä–º–µ—Ä–æ–º: /job —Ñ–µ—Ä–º–∞ - —Å 1 —É—Ä–æ–≤–Ω—è
üöï –†–∞–±–æ—Ç–∞—Ç—å —Ç–∞–∫—Å–∏—Å—Ç–æ–º: /job —Ç–∞–∫—Å–∏ - —Å 5 —É—Ä–æ–≤–Ω—è
üëÆ‚Äç‚ôÇ –†–∞–±–æ—Ç–∞—Ç—å –ø–æ–ª–∏—Ü–µ–π—Å–∫–∏–º: /job –ø–æ–ª–∏—Ü–∏—è - –° 10 —É—Ä–æ–≤–Ω—è
üßë‚Äçüíª –†–∞–±–æ—Ç–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–º: /job –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç - –° 20 —É—Ä–æ–≤–Ω—è
üèã –†–∞–±–æ—Ç–∞—Ç—å —Å–ø–æ—Ä—Ç—Å–º–µ–Ω–æ–º: /job –±–æ–¥–∏–±–∏–ª–¥–µ—Ä - –° 30 —É—Ä–æ–≤–Ω—è
üßë‚Äç‚öïÔ∏è–†–∞–±–æ—Ç–∞—Ç—å –≤—Ä–∞—á–æ–º: /job –≤—Ä–∞—á - –° 45 —É—Ä–æ–≤–Ω—è

				''')


#—É—Å—Ç—Ä–æ–∏—Ç—å—Å—è –Ω–∞ —Ä–∞–±–æ—Ç—É
@dp.message_handler(commands=['job'])
async def job(message: types.Message):

	user = User(message.from_user.id)
	user.check_user(message.from_user.id)

	if user.user_info()[5] == message.text[5:]:
		await message.reply('üòØ –ü–æ—Ö–æ–∂–µ –≤—ã —É–∂–µ –∑–¥–µ—Å—å —Ä–∞–±–æ—Ç–∞–µ—Ç–µ')


	elif message.text[5:] == '—Ñ–µ—Ä–º–∞':
		user.job_add(message.text[5:])
		await message.reply('''
üéÜ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —Ç–µ–ø–µ—Ä—å —Ç—ã —Ä–∞–±–æ—Ç–∞–µ—à—å –Ω–∞ —Ñ–µ—Ä–º–µ!
				
üîé –ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–≤–æ–µ–π —Ä–æ–±–æ—Ç–µ –Ω–∞–ø–∏—à–∏—Ç–µ "–ò–Ω—Ñ–∞ —Ñ–µ—Ä–º–∞"
		''')

	elif message.text[5:] == '—Ç–∞–∫—Å–∏':
		lvl = user.lvl_top()
		if lvl >= 5:
			user.job_add(message.text[5:])
			await message.reply('''
üéÜ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —Ç–µ–ø–µ—Ä—å —Ç—ã —Ä–∞–±–æ—Ç–∞–µ—à—å –≤ —Ç–∞–∫—Å–∏!
			
üîé –ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–≤–æ–µ–π —Ä–æ–±–æ—Ç–µ –Ω–∞–ø–∏—à–∏—Ç–µ "–ò–Ω—Ñ–∞ —Ç–∞–∫—Å–∏" 
			''')

		else:
			await message.reply('‚ùå –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —É—Å—Ç—Ä–æ–∏—Ç—å—Å—è –Ω–∞ —ç—Ç—É —Ä–∞–±–æ—Ç—É!')


	elif message.text[5:] == '–ø–æ–ª–∏—Ü–∏—è':
		lvl = user.lvl_top()
		if lvl >= 10:
			user.job_add(message.text[5:])
			await message.reply('''
üéÜ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —Ç–µ–ø–µ—Ä—å —Ç—ã —Ä–∞–±–æ—Ç–∞–µ—à—å –ø–æ–ª–∏—Ü–µ–π—Å–∫–∏–º!

üîé –ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–≤–æ–µ–π —Ä–æ–±–æ—Ç–µ –Ω–∞–ø–∏—à–∏—Ç–µ "–ò–Ω—Ñ–∞ –ø–æ–ª–∏—Ü–µ–π—Å–∫–∏–π" 
			''')

		else:
			await message.reply('‚ùå –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —É—Å—Ç—Ä–æ–∏—Ç—å—Å—è –Ω–∞ —ç—Ç—É —Ä–∞–±–æ—Ç—É!')


	elif message.text[5:] == '–ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç':
		lvl = user.lvl_top()
		if lvl >= 20:
			user.job_add(message.text[5:])
			await message.reply('''
üéÜ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —Ç–µ–ø–µ—Ä—å —Ç—ã —Ä–∞–±–æ—Ç–∞–µ—à—å –≤ –≥—É–≥–ª–µ!

üîé –ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–≤–æ–µ–π —Ä–æ–±–æ—Ç–µ –Ω–∞–ø–∏—à–∏—Ç–µ "–ò–Ω—Ñ–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç" 
			''')

		else:
			await message.reply('‚ùå –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —É—Å—Ç—Ä–æ–∏—Ç—å—Å—è –Ω–∞ —ç—Ç—É —Ä–∞–±–æ—Ç—É!')


	elif message.text[5:] == '–±–æ–¥–∏–±–∏–ª–¥–µ—Ä':
		lvl = user.lvl_top()
		if lvl >= 30:
			user.job_add(message.text[5:])
			await message.reply('''
üéÜ –¢–æ—á–Ω–æ! –î–∞–≤–Ω–æ –Ω—É–∂–Ω–æ –ø–µ—Ä–µ—Å—Ç–∞—Ç—å –±—É—Ö–∞—Ç—å –∏ –∑–∞–Ω—è—Ç—Å—è —Å–ø–æ—Ä—Ç–æ–º.

üîé –ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–≤–æ–µ–π —Ä–æ–±–æ—Ç–µ –Ω–∞–ø–∏—à–∏—Ç–µ "–ò–Ω—Ñ–∞ –±–æ–¥–∏–±–∏–ª–¥–µ—Ä" 
			''')

		else:
			await message.reply('‚ùå –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —É—Å—Ç—Ä–æ–∏—Ç—å—Å—è –Ω–∞ —ç—Ç—É —Ä–∞–±–æ—Ç—É!')


	elif message.text[5:] == '–í—Ä–∞—á':
		lvl = user.lvl_top()
		if lvl >= 45:
			user.job_add(message.text[5:])
			await message.reply('''
üéÜ –•–æ—Ä–æ—à–∏–π –≤—ã–±–æ—Ä, —Å–ø–∞—Å–∞—Ç—å –ª—é–¥–µ–π –±–ª–∞–≥–æ–µ –¥–µ–ª–æ!

üîé –ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–≤–æ–µ–π —Ä–æ–±–æ—Ç–µ –Ω–∞–ø–∏—à–∏—Ç–µ "–ò–Ω—Ñ–∞ –≤—Ä–∞—á" 
			''')

		else:
			await message.reply('‚ùå –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —É—Å—Ç—Ä–æ–∏—Ç—å—Å—è –Ω–∞ —ç—Ç—É —Ä–∞–±–æ—Ç—É!')


	else:
		await message.reply('üò¶ –£–ø—Å, –ø–æ—Ö–æ–∂–µ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫')


#–æ–ø–µ—Ä–∞—Ü–∏–∏ —Å –¥–µ–Ω—å–≥–∞–º–∏

#–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –±–∞–ª–∞–Ω—Å



#–ò–ù–§–û
@dp.message_handler(regexp='–ò–Ω—Ñ–∞') #info
async def info(message: types.Message):
	user = User(message.from_user.id)
	user.check_user(message.from_user.id)

	print(message.text[:4])
	if message.text[:4] == '–ò–Ω—Ñ–∞':
		print(message.text)

		if message.text == '–ò–Ω—Ñ–∞ —Ö–µ–ª–ø':
			await message.reply(
				'''
–í–æ—Ç —á—Ç–æ —Ç—ã –º–æ–∂–µ—à—å —É –º–µ–Ω—è —É–∑–Ω–∞—Ç—å:

–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–æ–±–æ—Ç–µ - –ò–Ω—Ñ–∞ —Ä–∞–±–æ—Ç–∞
				'''
)

		if message.text == '–ò–Ω—Ñ–∞ —Ä–∞–±–æ—Ç–∞':
			await message.reply(
				'''
–° –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã "–†–∞–±–æ—Ç—ã" - –í—ã —Å–º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –ø–µ—Ä–µ—á–µ–Ω—å —Ä–∞–±–æ—Ç –∏ –∫–∞–∫ –Ω–∞ –Ω–∏—Ö —É—Å—Ç—Ä–æ–∏—Ç—å—Å—è :)

–ö–æ–º–∞–Ω–¥–∞ /job <–≤—ã–±—Ä–∞–Ω–∞—è —Ä–∞–±–æ—Ç–∞> - –û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –∑–∞—á–∏—Å–ª–µ–Ω–∏–µ –Ω–∞ —Ä–∞–±–æ—Ç—É.

–ò—Å–ø–æ–ª—å–∑—É—è –∫–æ–º–∞–Ω–¥—É "–†–∞–±–æ—Ç–∞—Ç—å" - –í—ã —Å—Ö–æ–¥–∏—Ç–µ –Ω–∞ —Ä–∞–±–æ—Ç—É –∏ –ø–æ–ª—É—á–∏—Ç–µ –æ–ø–ª–∞—Ç—É.
				'''
			)


		else:
			await message.reply('üò¶ –£–ø—Å, –ø–æ—Ö–æ–∂–µ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫')




if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
